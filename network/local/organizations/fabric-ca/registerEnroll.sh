#!/bin/bash

function createProducers() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/producers/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/producers/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:4400 --caname ca-producers --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-4400-ca-producers.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-4400-ca-producers.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-4400-ca-producers.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-4400-ca-producers.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/peerOrganizations/producers/msp/config.yaml

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy producers's CA cert to producers's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p ${PWD}/organizations/peerOrganizations/producers/msp/tlscacerts
  cp ${PWD}/organizations/fabric-ca/producers/ca-cert.pem ${PWD}/organizations/peerOrganizations/producers/msp/tlscacerts/ca.crt

  # Copy producers's CA cert to producers's /tlsca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/producers/tlsca
  cp ${PWD}/organizations/fabric-ca/producers/ca-cert.pem ${PWD}/organizations/peerOrganizations/producers/tlsca/tlsca.producers-cert.pem

  # Copy producers's CA cert to producers's /ca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/producers/ca
  cp ${PWD}/organizations/fabric-ca/producers/ca-cert.pem ${PWD}/organizations/peerOrganizations/producers/ca/ca.producers-cert.pem

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-producers --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-producers --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer2"
  set -x
  fabric-ca-client register --caname ca-producers --id.name peer2 --id.secret peer2pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-producers --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-producers --id.name producersadmin --id.secret producersadminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/msp --csr.hosts peer0.producers --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/msp --csr.hosts peer1.producers --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer2 msp"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/msp --csr.hosts peer2.producers --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/producers/msp/config.yaml ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/producers/msp/config.yaml ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/producers/msp/config.yaml ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/msp/config.yaml

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/tls --enrollment.profile tls --csr.hosts peer0.producers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/tls --enrollment.profile tls --csr.hosts peer1.producers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/tls --enrollment.profile tls --csr.hosts peer2.producers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

 # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/tls/keystore/* ${PWD}/organizations/peerOrganizations/producers/peers/peer0.producers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/tls/keystore/* ${PWD}/organizations/peerOrganizations/producers/peers/peer1.producers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/tls/keystore/* ${PWD}/organizations/peerOrganizations/producers/peers/peer2.producers/tls/server.key

  infoln "Generating the user msp"

  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/users/User1@producers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/producers/msp/config.yaml ${PWD}/organizations/peerOrganizations/producers/users/User1@producers/msp/config.yaml

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://producersadmin:producersadminpw@localhost:4400 --caname ca-producers -M ${PWD}/organizations/peerOrganizations/producers/users/Admin@producers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/producers/ca-cert.pem

  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/producers/msp/config.yaml ${PWD}/organizations/peerOrganizations/producers/users/Admin@producers/msp/config.yaml
}
function createDistributors() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/distributors/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/distributors/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:5500 --caname ca-distributors --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-5500-ca-distributors.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-5500-ca-distributors.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-5500-ca-distributors.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-5500-ca-distributors.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/peerOrganizations/distributors/msp/config.yaml

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy distributors's CA cert to distributors's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p ${PWD}/organizations/peerOrganizations/distributors/msp/tlscacerts
  cp ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem ${PWD}/organizations/peerOrganizations/distributors/msp/tlscacerts/ca.crt

  # Copy distributors's CA cert to distributors's /tlsca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/distributors/tlsca
  cp ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem ${PWD}/organizations/peerOrganizations/distributors/tlsca/tlsca.distributors-cert.pem

  # Copy distributors's CA cert to distributors's /ca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/distributors/ca
  cp ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem ${PWD}/organizations/peerOrganizations/distributors/ca/ca.distributors-cert.pem

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-distributors --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-distributors --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer2"
  set -x
  fabric-ca-client register --caname ca-distributors --id.name peer2 --id.secret peer2pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-distributors --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-distributors --id.name distributorsadmin --id.secret distributorsadminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/msp --csr.hosts peer0.distributors --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/msp --csr.hosts peer1.distributors --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer2 msp"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/msp --csr.hosts peer2.distributors --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/distributors/msp/config.yaml ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/distributors/msp/config.yaml ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/distributors/msp/config.yaml ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/msp/config.yaml

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/tls --enrollment.profile tls --csr.hosts peer0.distributors --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/tls --enrollment.profile tls --csr.hosts peer1.distributors --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/tls --enrollment.profile tls --csr.hosts peer2.distributors --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

 # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/tls/signcerts/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/tls/keystore/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer0.distributors/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/tls/signcerts/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/tls/keystore/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer1.distributors/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/tls/signcerts/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/tls/keystore/* ${PWD}/organizations/peerOrganizations/distributors/peers/peer2.distributors/tls/server.key

  infoln "Generating the user msp"

  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/users/User1@distributors/msp --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/distributors/msp/config.yaml ${PWD}/organizations/peerOrganizations/distributors/users/User1@distributors/msp/config.yaml

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://distributorsadmin:distributorsadminpw@localhost:5500 --caname ca-distributors -M ${PWD}/organizations/peerOrganizations/distributors/users/Admin@distributors/msp --tls.certfiles ${PWD}/organizations/fabric-ca/distributors/ca-cert.pem

  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/distributors/msp/config.yaml ${PWD}/organizations/peerOrganizations/distributors/users/Admin@distributors/msp/config.yaml
}
function createRetailers() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/retailers/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/retailers/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:6600 --caname ca-retailers --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-6600-ca-retailers.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-6600-ca-retailers.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-6600-ca-retailers.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-6600-ca-retailers.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/peerOrganizations/retailers/msp/config.yaml

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy retailers's CA cert to retailers's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p ${PWD}/organizations/peerOrganizations/retailers/msp/tlscacerts
  cp ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem ${PWD}/organizations/peerOrganizations/retailers/msp/tlscacerts/ca.crt

  # Copy retailers's CA cert to retailers's /tlsca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/retailers/tlsca
  cp ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem ${PWD}/organizations/peerOrganizations/retailers/tlsca/tlsca.retailers-cert.pem

  # Copy retailers's CA cert to retailers's /ca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/retailers/ca
  cp ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem ${PWD}/organizations/peerOrganizations/retailers/ca/ca.retailers-cert.pem

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-retailers --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-retailers --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer2"
  set -x
  fabric-ca-client register --caname ca-retailers --id.name peer2 --id.secret peer2pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-retailers --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-retailers --id.name retailersadmin --id.secret retailersadminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/msp --csr.hosts peer0.retailers --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/msp --csr.hosts peer1.retailers --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer2 msp"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/msp --csr.hosts peer2.retailers --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/retailers/msp/config.yaml ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/retailers/msp/config.yaml ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/retailers/msp/config.yaml ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/msp/config.yaml

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/tls --enrollment.profile tls --csr.hosts peer0.retailers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/tls --enrollment.profile tls --csr.hosts peer1.retailers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/tls --enrollment.profile tls --csr.hosts peer2.retailers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

 # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/tls/keystore/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer0.retailers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/tls/keystore/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer1.retailers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/tls/keystore/* ${PWD}/organizations/peerOrganizations/retailers/peers/peer2.retailers/tls/server.key

  infoln "Generating the user msp"

  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/users/User1@retailers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/retailers/msp/config.yaml ${PWD}/organizations/peerOrganizations/retailers/users/User1@retailers/msp/config.yaml

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://retailersadmin:retailersadminpw@localhost:6600 --caname ca-retailers -M ${PWD}/organizations/peerOrganizations/retailers/users/Admin@retailers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/retailers/ca-cert.pem

  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/retailers/msp/config.yaml ${PWD}/organizations/peerOrganizations/retailers/users/Admin@retailers/msp/config.yaml
}
function createCustomers() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/customers/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/customers/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7700 --caname ca-customers --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7700-ca-customers.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7700-ca-customers.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7700-ca-customers.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7700-ca-customers.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/peerOrganizations/customers/msp/config.yaml

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy customers's CA cert to customers's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p ${PWD}/organizations/peerOrganizations/customers/msp/tlscacerts
  cp ${PWD}/organizations/fabric-ca/customers/ca-cert.pem ${PWD}/organizations/peerOrganizations/customers/msp/tlscacerts/ca.crt

  # Copy customers's CA cert to customers's /tlsca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/customers/tlsca
  cp ${PWD}/organizations/fabric-ca/customers/ca-cert.pem ${PWD}/organizations/peerOrganizations/customers/tlsca/tlsca.customers-cert.pem

  # Copy customers's CA cert to customers's /ca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/customers/ca
  cp ${PWD}/organizations/fabric-ca/customers/ca-cert.pem ${PWD}/organizations/peerOrganizations/customers/ca/ca.customers-cert.pem

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-customers --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-customers --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer2"
  set -x
  fabric-ca-client register --caname ca-customers --id.name peer2 --id.secret peer2pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-customers --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-customers --id.name customersadmin --id.secret customersadminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/msp --csr.hosts peer0.customers --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/msp --csr.hosts peer1.customers --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer2 msp"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/msp --csr.hosts peer2.customers --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/customers/msp/config.yaml ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/customers/msp/config.yaml ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/customers/msp/config.yaml ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/msp/config.yaml

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/tls --enrollment.profile tls --csr.hosts peer0.customers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/tls --enrollment.profile tls --csr.hosts peer1.customers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/tls --enrollment.profile tls --csr.hosts peer2.customers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

 # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/tls/keystore/* ${PWD}/organizations/peerOrganizations/customers/peers/peer0.customers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/tls/keystore/* ${PWD}/organizations/peerOrganizations/customers/peers/peer1.customers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/tls/keystore/* ${PWD}/organizations/peerOrganizations/customers/peers/peer2.customers/tls/server.key

  infoln "Generating the user msp"

  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/users/User1@customers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/customers/msp/config.yaml ${PWD}/organizations/peerOrganizations/customers/users/User1@customers/msp/config.yaml

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://customersadmin:customersadminpw@localhost:7700 --caname ca-customers -M ${PWD}/organizations/peerOrganizations/customers/users/Admin@customers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/customers/ca-cert.pem

  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/customers/msp/config.yaml ${PWD}/organizations/peerOrganizations/customers/users/Admin@customers/msp/config.yaml
}
function createSuppliers() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/suppliers/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/suppliers/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8800 --caname ca-suppliers --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8800-ca-suppliers.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8800-ca-suppliers.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8800-ca-suppliers.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8800-ca-suppliers.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/peerOrganizations/suppliers/msp/config.yaml

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy suppliers's CA cert to suppliers's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p ${PWD}/organizations/peerOrganizations/suppliers/msp/tlscacerts
  cp ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem ${PWD}/organizations/peerOrganizations/suppliers/msp/tlscacerts/ca.crt

  # Copy suppliers's CA cert to suppliers's /tlsca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/suppliers/tlsca
  cp ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem ${PWD}/organizations/peerOrganizations/suppliers/tlsca/tlsca.suppliers-cert.pem

  # Copy suppliers's CA cert to suppliers's /ca directory (for use by clients)
  mkdir -p ${PWD}/organizations/peerOrganizations/suppliers/ca
  cp ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem ${PWD}/organizations/peerOrganizations/suppliers/ca/ca.suppliers-cert.pem

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-suppliers --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-suppliers --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering peer2"
  set -x
  fabric-ca-client register --caname ca-suppliers --id.name peer2 --id.secret peer2pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-suppliers --id.name user1 --id.secret user1pw --id.type client --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-suppliers --id.name suppliersadmin --id.secret suppliersadminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/msp --csr.hosts peer0.suppliers --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/msp --csr.hosts peer1.suppliers --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the peer2 msp"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/msp --csr.hosts peer2.suppliers --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/suppliers/msp/config.yaml ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/suppliers/msp/config.yaml ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/msp/config.yaml
  cp ${PWD}/organizations/peerOrganizations/suppliers/msp/config.yaml ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/msp/config.yaml

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/tls --enrollment.profile tls --csr.hosts peer0.suppliers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/tls --enrollment.profile tls --csr.hosts peer1.suppliers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null


  infoln "Generating the peer2-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer2:peer2pw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/tls --enrollment.profile tls --csr.hosts peer2.suppliers --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

 # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/tls/keystore/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer0.suppliers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/tls/keystore/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer1.suppliers/tls/server.key

  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/tls/ca.crt
  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/tls/signcerts/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/tls/server.crt
  cp ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/tls/keystore/* ${PWD}/organizations/peerOrganizations/suppliers/peers/peer2.suppliers/tls/server.key

  infoln "Generating the user msp"

  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/users/User1@suppliers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/suppliers/msp/config.yaml ${PWD}/organizations/peerOrganizations/suppliers/users/User1@suppliers/msp/config.yaml

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://suppliersadmin:suppliersadminpw@localhost:8800 --caname ca-suppliers -M ${PWD}/organizations/peerOrganizations/suppliers/users/Admin@suppliers/msp --tls.certfiles ${PWD}/organizations/fabric-ca/suppliers/ca-cert.pem

  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/peerOrganizations/suppliers/msp/config.yaml ${PWD}/organizations/peerOrganizations/suppliers/users/Admin@suppliers/msp/config.yaml
}
function createOrderer1() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/traceflow.org/orderer1

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1


  fabric-ca-client enroll -u https://admin:adminpw@localhost:2200 --caname ca-orderer1 --tls.certfiles ${PWD}/organizations/fabric-ca/orderer1/ca-cert.pem


  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-2200-ca-orderer1.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-2200-ca-orderer1.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-2200-ca-orderer1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-2200-ca-orderer1.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/config.yaml

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/orderer1/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/tlscacerts/tlsca-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tlsca"
  cp "${PWD}/organizations/fabric-ca/orderer1/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tlsca/tlsca-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer1 --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles ${PWD}/organizations/fabric-ca/orderer1/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer1 --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/orderer1/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:2200 --caname ca-orderer1 -M ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp --tls.certfiles ${PWD}/organizations/fabric-ca/orderer1/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/config.yaml ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/config.yaml

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:2200 --caname ca-orderer1 -M ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls --enrollment.profile tls --csr.hosts orderer1 --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/orderer1/ca-cert.pem
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls/ca.crt
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls/signcerts/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls/server.crt
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls/keystore/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls/server.key

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/tlscacerts
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/tlscacerts/tlsca-cert.pem

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:2200 --caname ca-orderer1 -M ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/users/Admin@example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/orderer1/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/msp/config.yaml ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer1/users/Admin@example.com/msp/config.yaml
}
function createOrderer2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/traceflow.org/orderer2

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2


  fabric-ca-client enroll -u https://admin:adminpw@localhost:2201 --caname ca-orderer2 --tls.certfiles ${PWD}/organizations/fabric-ca/orderer2/ca-cert.pem


  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-2201-ca-orderer2.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-2201-ca-orderer2.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-2201-ca-orderer2.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-2201-ca-orderer2.pem
    OrganizationalUnitIdentifier: orderer' >${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/config.yaml

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/orderer2/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/tlscacerts/tlsca-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tlsca"
  cp "${PWD}/organizations/fabric-ca/orderer2/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tlsca/tlsca-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer2 --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles ${PWD}/organizations/fabric-ca/orderer2/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer2 --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles ${PWD}/organizations/fabric-ca/orderer2/ca-cert.pem
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:2201 --caname ca-orderer2 -M ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp --tls.certfiles ${PWD}/organizations/fabric-ca/orderer2/ca-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/config.yaml ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/config.yaml

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:2201 --caname ca-orderer2 -M ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls --enrollment.profile tls --csr.hosts orderer2 --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/orderer2/ca-cert.pem
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls/ca.crt
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls/signcerts/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls/server.crt
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls/keystore/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls/server.key

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/tlscacerts
  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/tls/tlscacerts/* ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/tlscacerts/tlsca-cert.pem

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:2201 --caname ca-orderer2 -M ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/users/Admin@example.com/msp --tls.certfiles ${PWD}/organizations/fabric-ca/orderer2/tls-cert.pem
  { set +x; } 2>/dev/null

  cp ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/msp/config.yaml ${PWD}/organizations/ordererOrganizations/traceflow.org/orderer2/users/Admin@example.com/msp/config.yaml
}


